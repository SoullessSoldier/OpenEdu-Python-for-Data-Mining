#2. Условный оператор и цикл while
#Lection 2
#2.1 Логический тип данных и логические связки
#Вася уехал учиться по обмену на один семестр в Италию. Единственный магазин в городе открыт с 6 до 8 утра и с 16 до 17 вечера (включительно). Вася не мог попасть в магазин уже несколько дней и страдает от голода. Он может прийти в магазин в X часов. Если магазин открыт в X часов, то выведите True, а если закрыт - выведите False.
#В единственной строке входных данных вводится целое число X, число находится в пределах от 0 до 23.
###
#x=int(input())
#flag=False
#flag=6<=x<=8 or 16<=x<=17
#print(flag)
###
#Вася не смог попасть в магазин в Италии. Несмотря на удачно подобранное время посещения магазина в этот день в городе праздновался день броколетти (цветной капусты) и магазин был закрыт по случаю праздника. Зато Вася смог купить билет до Испании за сущие копейки. В Испании есть магазин, который открыт с A до B часов включительно. Испания - жаркая страна, поэтому с C до D часов включительно наступает сиеста, когда все заведения, включая магазин, закрыты. При этом A < B, C < D. Обратите внимание, что время сиесты не обязательно полностью содержится в интервале работы магазина. Вася может прийти в испанский магазин в X часов. Выведите True если магазин открыт в это время и False, если он закрыт.

#Числа A, B, C, D, X вводятся по одному в строке и находятся в пределах от 0 до 23.
###
#A=int(input('Shop open: '))
#B=int(input('Shop close: '))
#C=int(input('Siesta starts: '))
#D=int(input('Siesta ends: '))
#X=int(input('Your hour: '))
#flag=True if A<=X<=B and (X<C or X>D) else False
#print(flag)
###
#
#
#2.2 Преобразование логических типов
#Вася закупился продуктами в Испании и ему больше не грозит голодная смерть. Однако, он потратил все деньги и был вынужден устроиться на работу свинопасом в Доломитовых Альпах с графиком сутки через трое. Вася работает начиная с первого дня (т.е. работает в день 1, отдыхает в дни 2 и 3, работает в день 4, отдыхает в дни 5 и 6 и т.д.). Выведите True, если в день X Вася должен работать и False в противном случае.
#В единственной строке входных данных вводится целое положительное число X. Оно может быть сколь угодно большим.
#Подсказка: Внимательно изучите остаток от деления номера дня на период работы Васи.
###
#x=int(input())
#print(True if x%3==1 else False)
##
#
#
#Чтобы заработать денег на этот автомобиль он взял себе еще одну подработку: пасти гусей сутки через трое. Таким образом, начиная с первого дня Вася пасет свиней с графиком сутки через двое (т.е. в дни 1, 4, 7 и т.д.), а также с первого дня пасет гусей с графиком сутки через трое (т.е. в дни 1, 5, 9 и т.д.). Выведите True, если в день X Вася пасет свиней и гусей одновременно и False в противном случае.
#В единственной строке входных данных вводится целое положительное число X, которое может быть сколь угодно большим.
#x=int(input())
#a= True if x%3==1 else False#Сутки через 2
#b= True if x%4==1 else False#Сутки через 3
#print(a and b)
#
#
#2.3
#
#Условный оператор if
#Выведите слово One, если было введено число 1 и не выводите ничего если было введено любое другое число.
###
#x=int(input())
#if x==1:
#    print('One')
###
#
#Выведите слово One, если было введено число 1, выводите фразу Not one если было введено любое другое число.
###
#x=int(input())
#print('One' if x==1 else 'Not one')
###
#
#Напишите программу, которая считывает два целых числа A и B и выводит наибольшее значение из них. Числа — целые от 1 до 1000.
#
###
#a=int(input())
#b=int(input())
#print(a if a>=b else b)
###
#
#2.3
#Операторы else и elif
#Даны два целых числа. Программа должна вывести число 1, если первое число больше второго, число 2, если второе больше первого или число 0, если они равны.
#Эту задачу нужно решить с помощью конструкций if-elif
###
#a=int(input())
#b=int(input())
#if a>b:
#    print(1)
#elif a<b:
#    print(2)
#else:
#    print(0)
###
#В математике функция sign(x) (знак числа) определена так:
#sign(x) = 1, если x > 0,
#sign(x) = -1, если x < 0,
#sign(x) = 0, если x = 0.
#Для данного числа x выведите значение sign(x).
###
#a=int(input())
#b=0
#if a>b:
#    print(1)
#elif a<b:
#    print(-1)
#else:
#    print(0)
###
#Даны три целых числа. Найдите наибольшее из них (программа должна вывести ровно одно целое число).
###
#a=int(input())
#b=int(input())
#c=int(input())
#if a>=b>=c or a>=c>=b: print(a)
#elif b>=a>=c or b>=c>=a: print(b)
#elif c>=a>=b or c>=b>=a: print(c)
#
#Дано натуральное число. Требуется определить, является ли год с данным номером високосным. Если год является високосным, то выведите YES, иначе выведите NO. Напомним, что в соответствии с григорианским календарем, год является високосным, если его номер кратен 4, но не кратен 100, а также если он кратен 400.
###
#x=int(input())
#print('YES' if (x%4==0 and not x%100==0) or x%400==0 else 'NO' )
###
#
#Даны три целых числа A, B, C. Выведите YES, есть ли среди них хотя бы одно четное и хотя бы одно нечетное, и NO в противном случае.
###
#a=int(input())
#b=int(input())
#c=int(input())
#print('YES' if (a%2==0 and (b%2==1 or c%2==1)) or (b%2==0 and (a%2==1 or c%2==1)) or (c%2==0 and (b%2==1 or a%2==1)) else 'NO')
###
#2.4
#Оператор цикла while
#По данному целому числу N распечатайте все квадраты натуральных (целых, положительных) чисел, не превосходящие N, в порядке возрастания. Обратите внимание, что если N является полным квадратом, то его тоже нужно печатать.
###
#x=int(input())
#i=1
#while i**2<=x:
#    print(i**2)
#    i+=1
###
#По данному числу N распечатайте все целые степени двойки, не превосходящие N, в порядке возрастания. Если число N является степенью двойки, то его также необходимо вывести
###
#x=int(input())
#i=0
#str1=''
#while 2**i<=x:
#    str1+=str(2**i)+' '
#    i+=1
#str1.strip()
#print(str1)
###
#
#2.5 Линейный поиск
#
#Последовательность состоит из натуральных чисел, не превосходящих 109, и завершается числом 0. Определите значение наибольшего элемента последовательности.
#Формат ввода
#Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).
###
#now=int(input())
#maxnow=now
#while now!=0:
#    if maxnow<now:
#        maxnow=now
#    now=int(input())
#print(maxnow)
###
#
#Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности больше предыдущего элемента.
#Формат ввода
#Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания).
#
###
#prev = int(input())
#answer = 0
#while prev != 0:
#    next = int(input())
#    if next != 0 and prev < next:
#        answer += 1
#    prev = next
#print(answer)
###
#
#Последовательность состоит из натуральных чисел и завершается числом 0. Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу.
#Формат ввода
#Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит, а служит как признак ее окончания)
#
###
#maximum = 0
#num_maximal = 0
#element = -1
#while element != 0:
#    element = int(input())
#    if element > maximum:
#        maximum, num_maximal = element, 1
#    elif element == maximum:
#        num_maximal += 1
#print(num_maximal)
###
#
#2.6 Вложенные циклы, операторы break и continue
#
#Example - считаем сумму введенных чисел, если число отрицательное - прерваться
#now=int(input())
#sumSeq=0
#while now!=0:
#    sumSeq+=now
#    now=int(input())
#    if now<0:
#        break
#print(sumSeq)
#
#Дано несколько чисел. Подсчитайте, сколько из них равны нулю, и выведите это количество.
#Формат ввода
#Cначала вводится число N, затем вводится ровно N целых чисел.
#
###
#number=int(input())
#i=0
#cnt=0
#while i<number:
#    num=int(input())
#    if num==0:
#        cnt+=1
#    i+=1
#print(cnt)
###
#
# Example Вложенные циклы Таблица умножения
###
#i=1
#while i<=10:
#    j=1
#    while j<=10:
#        print(i*j, end=' ')
#        j+=1
#    print()
#    i+=1
###
#Если надо прервать выполнение программы при появлении  числа 56
#
#i=1
#flag=False
#while i<=10:
#    j=1
#    while j<=10:
#        print(i*j, end=' ')
#        if i*j==56:
#            flag=True
#            break
#        j+=1
#    if flag:
#        break
#    print()
#    i+=1
###
#
#По данному натуральному n≤9 выведите лесенку из n ступенек, i-я ступенька состоит из чисел от 1 до i без пробелов.
#Формат ввода
#Вводится натуральное число.
###
#num=int(input())
#str1=''
#i=1
#while i<=num:
#    str1+=str(i)
#    print(str1)
#    i+=1
###
#
#Даны два целых числа A и B (при этом A≤B). Выведите все числа от A до B включительно.
#Формат ввода
#Вводятся два целых числа.
#
###
#a=int(input())
#b=int(input())
#while a<=b:
#    print(str(a),end=' ')
#    a+=1
#print()